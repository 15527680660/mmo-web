installed extension, use from extension sidebar
`Playwright Test for VSCode`

adopt typescript

build and bake from codebase.

debug will launch headed.
Debug step-by-step, explore selectors
Right click and start breakpoint debugging. Set a breakpoint, hover over a value. When your cursor is on some Playwright action or a locator, corresponding element (or elements) are highlighted in the browser.

Command line

Following are the usual command line patterns. Learn more about the command line.

    Run all the tests

    npx playwright test

Run a single test file

npx playwright test tests/todo-page.spec.ts

Run a set of test files

npx playwright test tests/todo-page/ tests/landing-page/

Run files that have my-spec or my-spec-2 in the file name

npx playwright test my-spec my-spec-2

Run the test with the title

npx playwright test -g "add a todo item"

Run tests in headed browsers

npx playwright test --headed

Run tests in a particular configuration (project)

npx playwright test --project=firefox

Disable parallelization

npx playwright test --workers=1

Choose a reporter

npx playwright test --reporter=dot

Run in debug mode with Playwright Inspector

npx playwright test --debug

Ask for help

npx playwright test --help

Configure NPM scripts

Playwright Test will automatically pick up playwright.config.js or playwright.config.ts.

{
  "scripts": {
    "test": "playwright test"
  }
}

If you put your configuration file in a different place, pass it with --config option.

{
  "scripts": {
    "test": "playwright test --config=tests/example.config.js"
  }
}

note

To pass options through npm script, use double dashes: npm run test -- --headed.